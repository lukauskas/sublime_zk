{
    "name": "Monokai Extended - Zettelkasten",
    "author": "github.com/jonschlinkert",
    "variables":
    {
        "black": "#000000",
        "black2": "#1c1c1c",
        "black3": "#202020",
        "black4": "#222222",
        "blue": "#7a9aff",
        "blue2": "#3bc0f0",
        "cyan": "#66d9ef",
        "grey": "#c8cecc",
        "grey2": "#3b3a32",
        "grey3": "#333333",
        "grey4": "#444444",
        "grey5": "#565656",
        "grey6": "#777777",
        "orange": "#fd971f",
        "orange2": "#fc951e",
        "orange3": "#f6aa11",
        "orange4": "#ff9117",
        "orange5": "#9d550f",
        "orange6": "#e69f66",
        "orange7": "#ffe792",
        "purple": "#be84ff",
        "purple2": "#ae81ff",
        "red": "#d3201f",
        "red2": "#ec3533",
        "red3": "#dc322f",
        "red4": "#ff3a28",
        "red5": "#b42a1d",
        "red6": "#cc4273",
        "red7": "#f92672",
        "red8": "#e42e70",
        "white": "#ffffff",
        "white2": "#f8f8f0",
        "white3": "#f8f8f2",
        "white4": "#e0fdce",
        "white5": "#e0eddd",
        "yellow": "#f6f080",
        "yellow2": "#e6db74",
        "yellow3": "#f0e68c",
        "yellow4": "#a6e22e",
        "yellow5": "#cfcfc2",
        "yellow6": "#aff132",
        "yellow7": "#636050",
        "yellow8": "#75715e",
        "yellow9": "#7c7865"
    },
    "globals":
    {
        "foreground": "var(white3)",
        "background": "var(black3)",
        "caret": "var(white2)",
        "invisibles": "var(grey2)",
        "line_highlight": "var(grey3)",
        "selection": "var(grey4)",
        "selection_border": "var(black2)",
        "active_guide": "color(var(orange5) alpha(0.69))",
        "find_highlight_foreground": "var(black)",
        "find_highlight": "var(orange7)",
        "brackets_options": "underline",
        "brackets_foreground": "color(var(white3) alpha(0.65))",
        "bracket_contents_options": "underline",
        "bracket_contents_foreground": "color(var(white3) alpha(0.65))",
        "tags_options": "stippled_underline"
    },
    "rules":
    [
        {
            "name": "Comment",
            "scope": "comment",
            "foreground": "var(yellow8)"
        },
        {
            "name": "String",
            "scope": "string",
            "foreground": "var(yellow2)"
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": "var(purple)"
        },
        {
            "name": "Constant: Built-in",
            "scope": "constant.language, meta.preprocessor",
            "foreground": "var(purple)"
        },
        {
            "name": "Constant: User-defined",
            "scope": "constant.character, constant.other",
            "foreground": "var(cyan)"
        },
        {
            "name": "Variable",
            "scope": "variable.language, variable.other",
            "foreground": "var(white)"
        },
        {
            "name": "Keyword",
            "scope": "keyword",
            "foreground": "var(red7)"
        },
        {
            "name": "Storage",
            "scope": "storage",
            "foreground": "var(red7)"
        },
        {
            "name": "Storage type",
            "scope": "storage.type",
            "foreground": "var(cyan)",
            "font_style": "italic"
        },
        {
            "name": "Class name",
            "scope": "entity.name.class",
            "foreground": "var(cyan)",
            "font_style": "underline"
        },
        {
            "name": "Inherited class",
            "scope": "entity.other.inherited-class",
            "foreground": "var(yellow4)",
            "font_style": "italic underline"
        },
        {
            "name": "Function name",
            "scope": "entity.name.function",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Function argument",
            "scope": "variable.parameter",
            "foreground": "var(orange)",
            "font_style": "italic"
        },
        {
            "name": "Tag name",
            "scope": "entity.name.tag",
            "foreground": "var(red7)"
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Library function",
            "scope": "support.function",
            "foreground": "var(cyan)"
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "foreground": "var(cyan)"
        },
        {
            "name": "Library class/type",
            "scope": "support.type, support.class",
            "foreground": "var(yellow4)",
            "font_style": "italic"
        },
        {
            "name": "Library variable",
            "scope": "support.other.variable"
        },
        {
            "name": "String constant",
            "scope": "string constant",
            "foreground": "var(cyan)"
        },
        {
            "name": "String.regexp",
            "scope": "string.regexp",
            "foreground": "var(orange3)"
        },
        {
            "name": "String variable",
            "scope": "string variable",
            "foreground": "var(white)"
        },
        {
            "name": "Variable: punctuation",
            "scope": "punctuation.definition.variable",
            "foreground": "var(white)"
        },
        {
            "name": "Entity",
            "scope": "entity",
            "foreground": "var(yellow4)"
        },
        {
            "name": "HTML: Doctype/XML Processing",
            "scope": "meta.tag.sgml.doctype.xml, declaration.sgml.html declaration.doctype, declaration.sgml.html declaration.doctype entity, declaration.sgml.html declaration.doctype string,  declaration.xml-processing, declaration.xml-processing entity, declaration.xml-processing string, doctype",
            "foreground": "var(grey)"
        },
        {
            "name": "HTML: Comment Block",
            "scope": "comment.block.html",
            "foreground": "var(yellow9)"
        },
        {
            "name": "HTML: Script",
            "scope": "entity.name.tag.script.html",
            "font_style": "italic"
        },
        {
            "name": "HTML: Attribute punctuation",
            "scope": "text.html.basic meta.tag.other.html, text.html.basic meta.tag.any.html, text.html.basic meta.tag.block.any, text.html.basic meta.tag.inline.any, text.html.basic meta.tag.structure.any.html,  text.html.basic source.js.embedded.html, punctuation.separator.key-value.html",
            "foreground": "var(yellow4)"
        },
        {
            "name": "HTML: Attributes",
            "scope": "text.html.basic entity.other.attribute-name.html",
            "foreground": "var(yellow4)"
        },
        {
            "name": "HTML: Quotation Marks",
            "scope": "text.html.basic meta.tag.structure.any.html punctuation.definition.string.begin.html, punctuation.definition.string.begin.html, punctuation.definition.string.end.html ",
            "foreground": "var(white)"
        },
        {
            "name": "HTML: Tags punctuation",
            "scope": "punctuation.definition.tag.end, punctuation.definition.tag.begin, punctuation.definition.tag",
            "foreground": "var(white)"
        },
        {
            "name": "Handlebars: Variable",
            "scope": "variable.parameter.handlebars",
            "foreground": "var(orange3)"
        },
        {
            "name": "Handlebars: Constant",
            "scope": "support.constant.handlebars, meta.function.block.start.handlebars",
            "foreground": "var(cyan)"
        },
        {
            "name": "CSS: @at-rule",
            "scope": "meta.preprocessor.at-rule keyword.control.at-rule",
            "foreground": "var(orange3)"
        },
        {
            "name": "CSS: #Id",
            "scope": "meta.selector.css entity.other.attribute-name.id",
            "foreground": "var(orange3)"
        },
        {
            "name": "CSS: .class",
            "scope": "meta.selector.css entity.other.attribute-name.class",
            "foreground": "var(yellow4)"
        },
        {
            "name": "CSS: Property Name",
            "scope": "support.type.property-name.css",
            "foreground": "var(cyan)"
        },
        {
            "name": "CSS: Constructor Argument",
            "scope": "meta.constructor.argument.css",
            "foreground": "var(orange3)"
        },
        {
            "name": "CSS: {}",
            "scope": "punctuation.section.property-list.css",
            "foreground": "var(white)"
        },
        {
            "name": "CSS: Tag Punctuation",
            "scope": "punctuation.definition.tag.css",
            "foreground": "var(red7)"
        },
        {
            "name": "CSS: : ,",
            "scope": "punctuation.separator.key-value.css, punctuation.terminator.rule.css",
            "foreground": "var(white)"
        },
        {
            "name": "CSS :pseudo",
            "scope": "entity.other.attribute-name.pseudo-element.css, entity.other.attribute-name.pseudo-class.css, entity.other.attribute-name.pseudo-selector.css",
            "foreground": "var(yellow4)"
        },
        {
            "name": "LESS variables",
            "scope": "variable.other.less",
            "foreground": "var(white)"
        },
        {
            "name": "LESS mixins",
            "scope": "entity.other.less.mixin",
            "foreground": "var(white4)",
            "font_style": "italic"
        },
        {
            "name": "LESS: Extend",
            "scope": "entity.other.attribute-name.pseudo-element.less",
            "foreground": "var(orange4)"
        },
        {
            "name": "JS: Instance constructor",
            "scope": "meta.instance.constructor meta.function-call.constructor.js",
            "foreground": "var(yellow4)"
        },
        {
            "name": "JS: es6 template delimiters ${}",
            "scope": "meta.template.expression.js punctuation.definition.template-expression.begin.js, meta.template.expression.js punctuation.definition.template-expression.end.js, meta.template.expression.js punctuation.accessor",
            "foreground": "var(yellow6)"
        },
        {
            "name": "JS: Function Name",
            "scope": "meta.function.js, entity.name.function.js, support.function.dom.js",
            "foreground": "var(yellow4)"
        },
        {
            "name": "JS: Param commas",
            "scope": "source.js meta.function.js punctuation.separator.parameter.function.js",
            "foreground": "var(white)"
        },
        {
            "name": "JS: Object dot notation",
            "scope": "meta.property.object.js, keyword.operator.accessor.js",
            "foreground": "var(white)"
        },
        {
            "name": "JS: colons",
            "scope": "source.js meta.group.braces.curly constant.other.object.key.js punctuation.separator.key-value.js",
            "foreground": "var(white)"
        },
        {
            "name": "JS: unquoted string",
            "scope": "source.js meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js",
            "foreground": "var(white)"
        },
        {
            "name": "JS: receiver",
            "scope": "support.type.object.module.js, source.js meta.function.declaration.js support.class.js",
            "foreground": "var(cyan)"
        },
        {
            "name": "JS: receiver property",
            "scope": "support.type.object.module.js support.type.object.module.js",
            "foreground": "var(yellow4)"
        },
        {
            "name": "JS: Storage Type",
            "scope": "storage.type.js",
            "foreground": "var(cyan)",
            "font_style": "italic"
        },
        {
            "name": "JS: Source",
            "scope": "text.html.basic source.js.embedded.html",
            "foreground": "var(white)"
        },
        {
            "name": "JS: Function",
            "scope": "storage.type.function.js",
            "foreground": "var(cyan)",
            "font_style": "italic"
        },
        {
            "name": "JS: Numeric Constant",
            "scope": "constant.numeric.js",
            "foreground": "var(purple2)"
        },
        {
            "name": "JS: Literal language variable",
            "scope": "variable.language.arguments.js, variable.language.super.js, variable.language.this.js, variable.language.self.js, variable.language.proto.js, variable.language.constructor.js, variable.language.prototype.js",
            "foreground": "var(cyan)",
            "font_style": "italic"
        },
        {
            "name": "JS: []",
            "scope": "meta.brace.square.js",
            "foreground": "var(white)"
        },
        {
            "name": "JS: ()",
            "scope": "meta.brace.round, punctuation.definition.parameters.begin.js, punctuation.definition.parameters.end.js, punctuation.definition.group",
            "foreground": "var(white)"
        },
        {
            "name": "JS: object literal {}",
            "scope": "meta.brace.curly.js, meta.object-literal.js",
            "foreground": "var(white)"
        },
        {
            "name": "JSON String",
            "scope": "meta.structure.dictionary.json string.quoted.double.json",
            "foreground": "var(yellow5)"
        },
        {
            "name": "CoffeeScript String Interpolated",
            "scope": "punctuation.section.embedded.coffee",
            "foreground": "var(orange6)"
        },
        {
            "name": "PHP: []",
            "scope": "keyword.operator.index-start.php, keyword.operator.index-end.php",
            "foreground": "var(white)"
        },
        {
            "name": "PHP: Array",
            "scope": "meta.array.php",
            "foreground": "var(white)"
        },
        {
            "name": "PHP: Array()",
            "scope": "meta.array.php support.function.construct.php, meta.array.empty.php support.function.construct.php",
            "foreground": "var(red8)"
        },
        {
            "name": "PHP: Array Construct",
            "scope": "support.function.construct.php",
            "foreground": "var(red8)"
        },
        {
            "name": "PHP: Storage Type Function",
            "scope": "storage.type.function.php",
            "foreground": "color(var(red7) alpha(0.87))"
        },
        {
            "name": "PHP: Numeric Constant",
            "scope": "constant.numeric.php",
            "foreground": "var(purple)"
        },
        {
            "name": "PHP: New",
            "scope": "keyword.other.new.php",
            "foreground": "var(orange3)"
        },
        {
            "name": "PHP: ::",
            "scope": "support.class.php",
            "foreground": "var(white)"
        },
        {
            "name": "PHP: Other Property",
            "scope": "variable.other.property.php",
            "foreground": "var(orange3)"
        },
        {
            "name": "PHP: Class",
            "scope": "storage.modifier.extends.php, storage.type.class.php, keyword.operator.class.php",
            "foreground": "var(yellow4)"
        },
        {
            "name": "PHP: Inherited Class",
            "scope": "meta.other.inherited-class.php",
            "foreground": "var(yellow4)"
        },
        {
            "name": "PHP: Storage Type",
            "scope": "storage.type.php",
            "foreground": "var(cyan)"
        },
        {
            "name": "PHP: Function",
            "scope": "entity.name.function.php",
            "foreground": "var(cyan)"
        },
        {
            "name": "PHP: Function Construct",
            "scope": "support.function.construct.php",
            "foreground": "var(yellow4)"
        },
        {
            "name": "PHP: Function Call",
            "scope": "entity.name.type.class.php, meta.function-call.php, meta.function-call.static.php, meta.function-call.object.php",
            "foreground": "var(white)"
        },
        {
            "name": "PHP: Comment",
            "scope": "keyword.other.phpdoc",
            "foreground": "var(yellow9)"
        },
        {
            "name": "PHP: Source Emebedded",
            "scope": "source.php.embedded.block.html",
            "foreground": "var(white)"
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "var(white2)",
            "background": "var(red7)"
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "var(white2)",
            "background": "var(purple2)"
        },
        {
            "name": "diff.header",
            "scope": "meta.diff, meta.diff.header",
            "foreground": "var(yellow8)"
        },
        {
            "name": "diff.deleted",
            "scope": "markup.deleted",
            "foreground": "var(red7)"
        },
        {
            "name": "diff.inserted",
            "scope": "markup.inserted",
            "foreground": "var(yellow4)"
        },
        {
            "name": "diff.changed",
            "scope": "markup.changed",
            "foreground": "var(yellow2)"
        },
        {
            "name": "diff.range",
            "scope": "meta.diff, meta.diff.range",
            "foreground": "var(blue2)"
        },
        {
            "name": "Python: storage",
            "scope": "storage.type.class.python, storage.type.function.python, storage.modifier.global.python",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Python: import",
            "scope": "keyword.control.import.python, keyword.control.import.from.python",
            "foreground": "color(var(red7) alpha(0.87))"
        },
        {
            "name": "Python: Support.exception",
            "scope": "support.type.exception.python",
            "foreground": "var(cyan)"
        },
        {
            "name": "Perl: variables",
            "scope": "punctuation.definition.variable.perl, variable.other.readwrite.global.perl, variable.other.predefined.perl, keyword.operator.comparison.perl",
            "foreground": "var(red8)"
        },
        {
            "name": "Perl: functions",
            "scope": "support.function.perl",
            "foreground": "var(cyan)"
        },
        {
            "name": "Perl: comments",
            "scope": "comment.line.number-sign.perl",
            "foreground": "var(yellow8)",
            "font_style": "italic"
        },
        {
            "name": "Perl: quotes",
            "scope": "punctuation.definition.string.begin.perl, punctuation.definition.string.end.perl",
            "foreground": "var(white)"
        },
        {
            "name": "Perl: char",
            "scope": "constant.character.escape.perl",
            "foreground": "var(red3)"
        },
        {
            "name": "Ruby: Constant",
            "scope": "constant.language.ruby, constant.numeric.ruby",
            "foreground": "var(purple2)"
        },
        {
            "name": "Ruby: Variable definition",
            "scope": "punctuation.definition.variable.ruby",
            "foreground": "var(orange3)"
        },
        {
            "name": "Ruby: Function Name",
            "scope": "meta.function.method.with-arguments.ruby",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Ruby: Variable",
            "scope": "variable.language.ruby",
            "foreground": "var(white)"
        },
        {
            "name": "Ruby: Function",
            "scope": "entity.name.function.ruby",
            "foreground": "var(orange3)"
        },
        {
            "name": "Ruby: Keyword Control",
            "scope": "keyword.control.ruby, keyword.control.def.ruby",
            "foreground": "var(yellow4)",
            "font_style": "bold"
        },
        {
            "name": "Ruby: Class",
            "scope": "keyword.control.class.ruby, meta.class.ruby",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Ruby: Class Name",
            "scope": "entity.name.type.class.ruby",
            "foreground": "var(cyan)"
        },
        {
            "name": "Ruby: Keyword",
            "scope": "keyword.control.ruby",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Ruby: Support Class",
            "scope": "support.class.ruby",
            "foreground": "var(cyan)"
        },
        {
            "name": "Ruby: Special Method",
            "scope": "keyword.other.special-method.ruby",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Ruby: Constant Other",
            "scope": "variable.other.constant.ruby",
            "foreground": "var(cyan)"
        },
        {
            "name": "Ruby: :symbol",
            "scope": "constant.other.symbol.ruby",
            "foreground": "var(yellow)"
        },
        {
            "name": "Ruby: Punctuation Section",
            "scope": "punctuation.section.embedded.ruby, punctuation.definition.string.begin.ruby, punctuation.definition.string.end.ruby",
            "foreground": "var(red7)"
        },
        {
            "name": "Ruby: Special Method",
            "scope": "keyword.other.special-method.ruby",
            "foreground": "var(red8)"
        },
        {
            "name": "Markdown: plain",
            "scope": "text.html.markdown",
            "foreground": "var(white)"
        },
        {
            "name": "Markup: raw inline",
            "scope": "text.html.markdown markup.raw.inline",
            "foreground": "var(red2)"
        },
        {
            "name": "Markdown: linebreak",
            "scope": "text.html.markdown meta.dummy.line-break",
            "foreground": "var(white5)"
        },
        {
            "name": "Markdown: heading",
            "scope": "markdown.heading, markup.heading | markup.heading entity.name, markup.heading.markdown punctuation.definition.heading.markdown",
            "foreground": "var(orange)"
        },
        {
            "name": "Markup: italic",
            "scope": "markup.italic",
            "foreground": "var(red8)",
            "font_style": "italic"
        },
        {
            "name": "Markup: bold",
            "scope": "markup.bold",
            "foreground": "var(red7)",
            "font_style": "bold"
        },
        {
            "name": "Markup: underline",
            "scope": "markup.underline",
            "foreground": "var(yellow4)",
            "font_style": "underline"
        },
        {
            "name": "Markup: Zettelkasten note link",
            "scope": "markup.zettel.link",
            "foreground": "var(blue)",
            "font_style": "underline"
        },
        {
            "name": "Markup: Zettelkasten note link title",
            "scope": "markup.zettel.linktitle",
            "foreground": "var(blue)",
            "font_style": "underline"
        },
        {
            "name": "Markup: Zettelkasten tag",
            "scope": "markup.zettel.tag",
            "foreground": "var(red8)",
            "font_style": "italic"
        },
        {
            "name": "Markup: Zettelkasten Image attrs in image link",
            "scope": "meta.image.inline.markdown.imageattr",
            "foreground": "var(yellow3)"
        },
        {
            "name": "Markup: strike",
            "scope": "markup.strike",
            "foreground": "var(red6)"
        },
        {
            "name": "Markdown: Blockquote",
            "scope": "markup.quote, punctuation.definition.blockquote.markdown",
            "foreground": "var(cyan)",
            "font_style": "italic"
        },
        {
            "name": "Markup: Quote",
            "scope": "markup.quote",
            "foreground": "var(cyan)",
            "font_style": "italic"
        },
        {
            "name": "Markdown: Link",
            "scope": "string.other.link.title.markdown",
            "foreground": "var(cyan)",
            "font_style": "underline"
        },
        {
            "name": "Markup: Raw block",
            "scope": "markup.raw.block",
            "foreground": "var(purple2)"
        },
        {
            "name": "Markdown: List Items Punctuation",
            "scope": "punctuation.definition.list_item.markdown",
            "foreground": "var(grey6)"
        },
        {
            "name": "Markdown: Raw Block fenced",
            "scope": "markup.raw.block.fenced.markdown",
            "foreground": "var(white)",
            "background": "var(black4)"
        },
        {
            "name": "Markdown: Fenced Bode Block",
            "scope": "punctuation.definition.fenced.markdown, variable.language.fenced.markdown",
            "foreground": "var(yellow7)",
            "background": "var(black4)"
        },
        {
            "name": "Markdown: Fenced Language",
            "scope": "variable.language.fenced.markdown",
            "foreground": "var(yellow9)"
        },
        {
            "name": "Markdown: Separator",
            "scope": "meta.separator",
            "foreground": "color(var(white) alpha(0.2))",
            "background": "color(var(white) alpha(0.059))",
            "font_style": "bold"
        },
        {
            "name": "Markup: table",
            "scope": "markup.table",
            "foreground": "var(red5)",
            "background": "color(var(red4) alpha(0.1))"
        },
        {
            "name": "LaTeX: Math Variables",
            "scope": "variable.other.math.tex",
            "foreground": "var(yellow2)"
        },
        {
            "name": "Other: Removal",
            "scope": "other.package.exclude, other.remove",
            "foreground": "var(red)"
        },
        {
            "name": "Shell: builtin",
            "scope": "support.function.builtin.shell",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Shell: variable",
            "scope": "variable.other.normal.shell",
            "foreground": "var(cyan)"
        },
        {
            "name": "Shell: DOTFILES",
            "scope": "source.shell",
            "foreground": "var(white)"
        },
        {
            "name": "Shell: meta scope in loop",
            "scope": "meta.scope.for-in-loop.shell, variable.other.loop.shell",
            "foreground": "var(orange)"
        },
        {
            "name": "Shell: Function name",
            "scope": "entity.name.function.shell",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Shell: Quotation Marks",
            "scope": "punctuation.definition.string.end.shell, punctuation.definition.string.begin.shell",
            "foreground": "var(white)"
        },
        {
            "name": "Shell: Meta Block",
            "scope": "meta.scope.case-block.shell, meta.scope.case-body.shell",
            "foreground": "var(orange)"
        },
        {
            "name": "Shell: []",
            "scope": "punctuation.definition.logical-expression.shell",
            "foreground": "var(white)"
        },
        {
            "name": "Shell: Comment",
            "scope": "comment.line.number-sign.shell",
            "foreground": "var(yellow9)",
            "font_style": "italic"
        },
        {
            "name": "Makefile: Comment",
            "scope": "comment.line.number-sign.makefile",
            "foreground": "var(yellow9)"
        },
        {
            "name": "Makefile: Comment punctuation",
            "scope": "punctuation.definition.comment.makefile",
            "foreground": "var(yellow9)"
        },
        {
            "name": "Makefile: Variables",
            "scope": "variable.other.makefile",
            "foreground": "var(red7)"
        },
        {
            "name": "Makefile: Function name",
            "scope": "entity.name.function.makefile",
            "foreground": "var(yellow4)"
        },
        {
            "name": "Makefile: Function",
            "scope": "meta.function.makefile",
            "foreground": "var(cyan)"
        },
        {
            "name": "GitGutter deleted",
            "scope": "markup.deleted.git_gutter",
            "foreground": "var(red7)"
        },
        {
            "name": "GitGutter inserted",
            "scope": "markup.inserted.git_gutter",
            "foreground": "var(yellow4)"
        },
        {
            "name": "GitGutter changed",
            "scope": "markup.changed.git_gutter",
            "foreground": "var(orange2)"
        },
        {
            "name": "GitGutter ignored",
            "scope": "markup.ignored.git_gutter",
            "foreground": "var(grey5)"
        },
        {
            "name": "GitGutter untracked",
            "scope": "markup.untracked.git_gutter",
            "foreground": "var(grey5)"
        },
        {
            "name": "Nginx path",
            "scope": "string.other.path.nginx",
            "foreground": "var(orange2)"
        }
    ]
}